<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pnlCancelar.Style.BackgroundImage.ImageData" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <metadata name="$this.Zoom" type="System.Single, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>2</value>
  </metadata>
  <metadata name="$this.ShowSnapGrid" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>